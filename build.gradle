
buildscript {
	ext.setExtProperty = { propertyName, defaultValue -> 
		if (!project.hasProperty(propertyName)) {
			ext[propertyName] = defaultValue
		}
	}
	ext {
		setExtProperty("scsStartersVersion","1.3.1.RELEASE")
		setExtProperty("springCloudVersion","Camden.SR3")
		springBootVersion = "1.4.2.RELEASE"
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/plugins-release" }
		maven { url "https://repo.spring.io/libs-release" }
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
subprojects {
	apply plugin: "java"
	apply plugin: "eclipse"
	apply plugin: "idea"
	apply plugin: "io.spring.dependency-management"

	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/libs-release" }
		maven { url "https://repo.spring.io/libs-snapshot" }
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
			mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${scsStartersVersion}"

		}
	}

	apply plugin: "org.springframework.boot"

	dependencies {
		compile("org.springframework.boot:spring-boot-starter-web")
		compile("org.springframework.boot:spring-boot-starter-actuator")
	}
}

project(":hello-service") {
	dependencies {
		compile('org.springframework.cloud:spring-cloud-config-server')
	}
}

project(":hello-service-config-server") {
	dependencies {
		compile("io.pivotal.spring.cloud:spring-cloud-services-starter-config-client")
	}
}

project(":hello-service-eureka") {
	dependencies {
		compile("io.pivotal.spring.cloud:spring-cloud-services-starter-config-client")
		compile("io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry")
	}
}

project(":hello-eureka-server") { 
	dependencies {
		compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server', version: '2.0.1.RELEASE'
		testCompile('org.springframework.boot:spring-boot-starter-test')
	}
}

project(":hello-client") {

}

project(":hello-client-eureka") {
	dependencies {
		compile("io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry")
	}
}

project(":hello-client-hystrix") {
	dependencies {
		compile("io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry")
		compile("io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker")
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
